/*
 * ORY Hydra
 * Welcome to the ORY Hydra HTTP API documentation. You will find documentation for all HTTP APIs here.
 *
 * The version of the OpenAPI document: latest
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package sh.ory.hydra.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import org.threeten.bp.OffsetDateTime;
import sh.ory.hydra.model.Extension;
import sh.ory.hydra.model.IPNet;
import sh.ory.hydra.model.Name;
import sh.ory.hydra.model.URL;

/**
 * Certificate
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2020-01-08T09:52:59.412240Z[GMT]")
public class Certificate {
  public static final String SERIALIZED_NAME_AUTHORITY_KEY_ID = "AuthorityKeyId";
  @SerializedName(SERIALIZED_NAME_AUTHORITY_KEY_ID)
  private List<Integer> authorityKeyId = null;

  public static final String SERIALIZED_NAME_BASIC_CONSTRAINTS_VALID = "BasicConstraintsValid";
  @SerializedName(SERIALIZED_NAME_BASIC_CONSTRAINTS_VALID)
  private Boolean basicConstraintsValid;

  public static final String SERIALIZED_NAME_CR_L_DISTRIBUTION_POINTS = "CRLDistributionPoints";
  @SerializedName(SERIALIZED_NAME_CR_L_DISTRIBUTION_POINTS)
  private List<String> crLDistributionPoints = null;

  public static final String SERIALIZED_NAME_DN_S_NAMES = "DNSNames";
  @SerializedName(SERIALIZED_NAME_DN_S_NAMES)
  private List<String> dnSNames = null;

  public static final String SERIALIZED_NAME_EMAIL_ADDRESSES = "EmailAddresses";
  @SerializedName(SERIALIZED_NAME_EMAIL_ADDRESSES)
  private List<String> emailAddresses = null;

  public static final String SERIALIZED_NAME_EXCLUDED_D_N_S_DOMAINS = "ExcludedDNSDomains";
  @SerializedName(SERIALIZED_NAME_EXCLUDED_D_N_S_DOMAINS)
  private List<String> excludedDNSDomains = null;

  public static final String SERIALIZED_NAME_EXCLUDED_EMAIL_ADDRESSES = "ExcludedEmailAddresses";
  @SerializedName(SERIALIZED_NAME_EXCLUDED_EMAIL_ADDRESSES)
  private List<String> excludedEmailAddresses = null;

  public static final String SERIALIZED_NAME_EXCLUDED_I_P_RANGES = "ExcludedIPRanges";
  @SerializedName(SERIALIZED_NAME_EXCLUDED_I_P_RANGES)
  private List<IPNet> excludedIPRanges = null;

  public static final String SERIALIZED_NAME_EXCLUDED_U_R_I_DOMAINS = "ExcludedURIDomains";
  @SerializedName(SERIALIZED_NAME_EXCLUDED_U_R_I_DOMAINS)
  private List<String> excludedURIDomains = null;

  public static final String SERIALIZED_NAME_EXT_KEY_USAGE = "ExtKeyUsage";
  @SerializedName(SERIALIZED_NAME_EXT_KEY_USAGE)
  private List<Long> extKeyUsage = null;

  public static final String SERIALIZED_NAME_EXTENSIONS = "Extensions";
  @SerializedName(SERIALIZED_NAME_EXTENSIONS)
  private List<Extension> extensions = null;

  public static final String SERIALIZED_NAME_EXTRA_EXTENSIONS = "ExtraExtensions";
  @SerializedName(SERIALIZED_NAME_EXTRA_EXTENSIONS)
  private List<Extension> extraExtensions = null;

  public static final String SERIALIZED_NAME_IP_ADDRESSES = "IPAddresses";
  @SerializedName(SERIALIZED_NAME_IP_ADDRESSES)
  private List<List<Integer>> ipAddresses = null;

  public static final String SERIALIZED_NAME_IS_C_A = "IsCA";
  @SerializedName(SERIALIZED_NAME_IS_C_A)
  private Boolean isCA;

  public static final String SERIALIZED_NAME_ISSUER = "Issuer";
  @SerializedName(SERIALIZED_NAME_ISSUER)
  private Name issuer;

  public static final String SERIALIZED_NAME_ISSUING_CERTIFICATE_U_R_L = "IssuingCertificateURL";
  @SerializedName(SERIALIZED_NAME_ISSUING_CERTIFICATE_U_R_L)
  private List<String> issuingCertificateURL = null;

  public static final String SERIALIZED_NAME_KEY_USAGE = "KeyUsage";
  @SerializedName(SERIALIZED_NAME_KEY_USAGE)
  private Long keyUsage;

  public static final String SERIALIZED_NAME_MAX_PATH_LEN = "MaxPathLen";
  @SerializedName(SERIALIZED_NAME_MAX_PATH_LEN)
  private Long maxPathLen;

  public static final String SERIALIZED_NAME_MAX_PATH_LEN_ZERO = "MaxPathLenZero";
  @SerializedName(SERIALIZED_NAME_MAX_PATH_LEN_ZERO)
  private Boolean maxPathLenZero;

  public static final String SERIALIZED_NAME_NOT_BEFORE = "NotBefore";
  @SerializedName(SERIALIZED_NAME_NOT_BEFORE)
  private OffsetDateTime notBefore;

  public static final String SERIALIZED_NAME_OC_S_P_SERVER = "OCSPServer";
  @SerializedName(SERIALIZED_NAME_OC_S_P_SERVER)
  private List<String> ocSPServer = null;

  public static final String SERIALIZED_NAME_PERMITTED_D_N_S_DOMAINS = "PermittedDNSDomains";
  @SerializedName(SERIALIZED_NAME_PERMITTED_D_N_S_DOMAINS)
  private List<String> permittedDNSDomains = null;

  public static final String SERIALIZED_NAME_PERMITTED_D_N_S_DOMAINS_CRITICAL = "PermittedDNSDomainsCritical";
  @SerializedName(SERIALIZED_NAME_PERMITTED_D_N_S_DOMAINS_CRITICAL)
  private Boolean permittedDNSDomainsCritical;

  public static final String SERIALIZED_NAME_PERMITTED_EMAIL_ADDRESSES = "PermittedEmailAddresses";
  @SerializedName(SERIALIZED_NAME_PERMITTED_EMAIL_ADDRESSES)
  private List<String> permittedEmailAddresses = null;

  public static final String SERIALIZED_NAME_PERMITTED_I_P_RANGES = "PermittedIPRanges";
  @SerializedName(SERIALIZED_NAME_PERMITTED_I_P_RANGES)
  private List<IPNet> permittedIPRanges = null;

  public static final String SERIALIZED_NAME_PERMITTED_U_R_I_DOMAINS = "PermittedURIDomains";
  @SerializedName(SERIALIZED_NAME_PERMITTED_U_R_I_DOMAINS)
  private List<String> permittedURIDomains = null;

  public static final String SERIALIZED_NAME_POLICY_IDENTIFIERS = "PolicyIdentifiers";
  @SerializedName(SERIALIZED_NAME_POLICY_IDENTIFIERS)
  private List<List<Long>> policyIdentifiers = null;

  public static final String SERIALIZED_NAME_PUBLIC_KEY = "PublicKey";
  @SerializedName(SERIALIZED_NAME_PUBLIC_KEY)
  private Object publicKey;

  public static final String SERIALIZED_NAME_PUBLIC_KEY_ALGORITHM = "PublicKeyAlgorithm";
  @SerializedName(SERIALIZED_NAME_PUBLIC_KEY_ALGORITHM)
  private Long publicKeyAlgorithm;

  public static final String SERIALIZED_NAME_RAW = "Raw";
  @SerializedName(SERIALIZED_NAME_RAW)
  private List<Integer> raw = null;

  public static final String SERIALIZED_NAME_RAW_ISSUER = "RawIssuer";
  @SerializedName(SERIALIZED_NAME_RAW_ISSUER)
  private List<Integer> rawIssuer = null;

  public static final String SERIALIZED_NAME_RAW_SUBJECT = "RawSubject";
  @SerializedName(SERIALIZED_NAME_RAW_SUBJECT)
  private List<Integer> rawSubject = null;

  public static final String SERIALIZED_NAME_RAW_SUBJECT_PUBLIC_KEY_INFO = "RawSubjectPublicKeyInfo";
  @SerializedName(SERIALIZED_NAME_RAW_SUBJECT_PUBLIC_KEY_INFO)
  private List<Integer> rawSubjectPublicKeyInfo = null;

  public static final String SERIALIZED_NAME_RAW_T_B_S_CERTIFICATE = "RawTBSCertificate";
  @SerializedName(SERIALIZED_NAME_RAW_T_B_S_CERTIFICATE)
  private List<Integer> rawTBSCertificate = null;

  public static final String SERIALIZED_NAME_SERIAL_NUMBER = "SerialNumber";
  @SerializedName(SERIALIZED_NAME_SERIAL_NUMBER)
  private Object serialNumber;

  public static final String SERIALIZED_NAME_SIGNATURE = "Signature";
  @SerializedName(SERIALIZED_NAME_SIGNATURE)
  private List<Integer> signature = null;

  public static final String SERIALIZED_NAME_SIGNATURE_ALGORITHM = "SignatureAlgorithm";
  @SerializedName(SERIALIZED_NAME_SIGNATURE_ALGORITHM)
  private Long signatureAlgorithm;

  public static final String SERIALIZED_NAME_SUBJECT = "Subject";
  @SerializedName(SERIALIZED_NAME_SUBJECT)
  private Name subject;

  public static final String SERIALIZED_NAME_SUBJECT_KEY_ID = "SubjectKeyId";
  @SerializedName(SERIALIZED_NAME_SUBJECT_KEY_ID)
  private List<Integer> subjectKeyId = null;

  public static final String SERIALIZED_NAME_UR_IS = "URIs";
  @SerializedName(SERIALIZED_NAME_UR_IS)
  private List<URL> urIs = null;

  public static final String SERIALIZED_NAME_UNHANDLED_CRITICAL_EXTENSIONS = "UnhandledCriticalExtensions";
  @SerializedName(SERIALIZED_NAME_UNHANDLED_CRITICAL_EXTENSIONS)
  private List<List<Long>> unhandledCriticalExtensions = null;

  public static final String SERIALIZED_NAME_UNKNOWN_EXT_KEY_USAGE = "UnknownExtKeyUsage";
  @SerializedName(SERIALIZED_NAME_UNKNOWN_EXT_KEY_USAGE)
  private List<List<Long>> unknownExtKeyUsage = null;

  public static final String SERIALIZED_NAME_VERSION = "Version";
  @SerializedName(SERIALIZED_NAME_VERSION)
  private Long version;


  public Certificate authorityKeyId(List<Integer> authorityKeyId) {
    
    this.authorityKeyId = authorityKeyId;
    return this;
  }

  public Certificate addAuthorityKeyIdItem(Integer authorityKeyIdItem) {
    if (this.authorityKeyId == null) {
      this.authorityKeyId = new ArrayList<Integer>();
    }
    this.authorityKeyId.add(authorityKeyIdItem);
    return this;
  }

   /**
   * authority key Id
   * @return authorityKeyId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "authority key Id")

  public List<Integer> getAuthorityKeyId() {
    return authorityKeyId;
  }


  public void setAuthorityKeyId(List<Integer> authorityKeyId) {
    this.authorityKeyId = authorityKeyId;
  }


  public Certificate basicConstraintsValid(Boolean basicConstraintsValid) {
    
    this.basicConstraintsValid = basicConstraintsValid;
    return this;
  }

   /**
   * BasicConstraintsValid indicates whether IsCA, MaxPathLen, and MaxPathLenZero are valid.
   * @return basicConstraintsValid
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "BasicConstraintsValid indicates whether IsCA, MaxPathLen, and MaxPathLenZero are valid.")

  public Boolean getBasicConstraintsValid() {
    return basicConstraintsValid;
  }


  public void setBasicConstraintsValid(Boolean basicConstraintsValid) {
    this.basicConstraintsValid = basicConstraintsValid;
  }


  public Certificate crLDistributionPoints(List<String> crLDistributionPoints) {
    
    this.crLDistributionPoints = crLDistributionPoints;
    return this;
  }

  public Certificate addCrLDistributionPointsItem(String crLDistributionPointsItem) {
    if (this.crLDistributionPoints == null) {
      this.crLDistributionPoints = new ArrayList<String>();
    }
    this.crLDistributionPoints.add(crLDistributionPointsItem);
    return this;
  }

   /**
   * CRL Distribution Points
   * @return crLDistributionPoints
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "CRL Distribution Points")

  public List<String> getCrLDistributionPoints() {
    return crLDistributionPoints;
  }


  public void setCrLDistributionPoints(List<String> crLDistributionPoints) {
    this.crLDistributionPoints = crLDistributionPoints;
  }


  public Certificate dnSNames(List<String> dnSNames) {
    
    this.dnSNames = dnSNames;
    return this;
  }

  public Certificate addDnSNamesItem(String dnSNamesItem) {
    if (this.dnSNames == null) {
      this.dnSNames = new ArrayList<String>();
    }
    this.dnSNames.add(dnSNamesItem);
    return this;
  }

   /**
   * Subject Alternate Name values. (Note that these values may not be valid if invalid values were contained within a parsed certificate. For example, an element of DNSNames may not be a valid DNS domain name.)
   * @return dnSNames
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Subject Alternate Name values. (Note that these values may not be valid if invalid values were contained within a parsed certificate. For example, an element of DNSNames may not be a valid DNS domain name.)")

  public List<String> getDnSNames() {
    return dnSNames;
  }


  public void setDnSNames(List<String> dnSNames) {
    this.dnSNames = dnSNames;
  }


  public Certificate emailAddresses(List<String> emailAddresses) {
    
    this.emailAddresses = emailAddresses;
    return this;
  }

  public Certificate addEmailAddressesItem(String emailAddressesItem) {
    if (this.emailAddresses == null) {
      this.emailAddresses = new ArrayList<String>();
    }
    this.emailAddresses.add(emailAddressesItem);
    return this;
  }

   /**
   * email addresses
   * @return emailAddresses
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "email addresses")

  public List<String> getEmailAddresses() {
    return emailAddresses;
  }


  public void setEmailAddresses(List<String> emailAddresses) {
    this.emailAddresses = emailAddresses;
  }


  public Certificate excludedDNSDomains(List<String> excludedDNSDomains) {
    
    this.excludedDNSDomains = excludedDNSDomains;
    return this;
  }

  public Certificate addExcludedDNSDomainsItem(String excludedDNSDomainsItem) {
    if (this.excludedDNSDomains == null) {
      this.excludedDNSDomains = new ArrayList<String>();
    }
    this.excludedDNSDomains.add(excludedDNSDomainsItem);
    return this;
  }

   /**
   * excluded DNS domains
   * @return excludedDNSDomains
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "excluded DNS domains")

  public List<String> getExcludedDNSDomains() {
    return excludedDNSDomains;
  }


  public void setExcludedDNSDomains(List<String> excludedDNSDomains) {
    this.excludedDNSDomains = excludedDNSDomains;
  }


  public Certificate excludedEmailAddresses(List<String> excludedEmailAddresses) {
    
    this.excludedEmailAddresses = excludedEmailAddresses;
    return this;
  }

  public Certificate addExcludedEmailAddressesItem(String excludedEmailAddressesItem) {
    if (this.excludedEmailAddresses == null) {
      this.excludedEmailAddresses = new ArrayList<String>();
    }
    this.excludedEmailAddresses.add(excludedEmailAddressesItem);
    return this;
  }

   /**
   * excluded email addresses
   * @return excludedEmailAddresses
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "excluded email addresses")

  public List<String> getExcludedEmailAddresses() {
    return excludedEmailAddresses;
  }


  public void setExcludedEmailAddresses(List<String> excludedEmailAddresses) {
    this.excludedEmailAddresses = excludedEmailAddresses;
  }


  public Certificate excludedIPRanges(List<IPNet> excludedIPRanges) {
    
    this.excludedIPRanges = excludedIPRanges;
    return this;
  }

  public Certificate addExcludedIPRangesItem(IPNet excludedIPRangesItem) {
    if (this.excludedIPRanges == null) {
      this.excludedIPRanges = new ArrayList<IPNet>();
    }
    this.excludedIPRanges.add(excludedIPRangesItem);
    return this;
  }

   /**
   * excluded IP ranges
   * @return excludedIPRanges
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "excluded IP ranges")

  public List<IPNet> getExcludedIPRanges() {
    return excludedIPRanges;
  }


  public void setExcludedIPRanges(List<IPNet> excludedIPRanges) {
    this.excludedIPRanges = excludedIPRanges;
  }


  public Certificate excludedURIDomains(List<String> excludedURIDomains) {
    
    this.excludedURIDomains = excludedURIDomains;
    return this;
  }

  public Certificate addExcludedURIDomainsItem(String excludedURIDomainsItem) {
    if (this.excludedURIDomains == null) {
      this.excludedURIDomains = new ArrayList<String>();
    }
    this.excludedURIDomains.add(excludedURIDomainsItem);
    return this;
  }

   /**
   * excluded URI domains
   * @return excludedURIDomains
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "excluded URI domains")

  public List<String> getExcludedURIDomains() {
    return excludedURIDomains;
  }


  public void setExcludedURIDomains(List<String> excludedURIDomains) {
    this.excludedURIDomains = excludedURIDomains;
  }


  public Certificate extKeyUsage(List<Long> extKeyUsage) {
    
    this.extKeyUsage = extKeyUsage;
    return this;
  }

  public Certificate addExtKeyUsageItem(Long extKeyUsageItem) {
    if (this.extKeyUsage == null) {
      this.extKeyUsage = new ArrayList<Long>();
    }
    this.extKeyUsage.add(extKeyUsageItem);
    return this;
  }

   /**
   * ext key usage
   * @return extKeyUsage
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "ext key usage")

  public List<Long> getExtKeyUsage() {
    return extKeyUsage;
  }


  public void setExtKeyUsage(List<Long> extKeyUsage) {
    this.extKeyUsage = extKeyUsage;
  }


  public Certificate extensions(List<Extension> extensions) {
    
    this.extensions = extensions;
    return this;
  }

  public Certificate addExtensionsItem(Extension extensionsItem) {
    if (this.extensions == null) {
      this.extensions = new ArrayList<Extension>();
    }
    this.extensions.add(extensionsItem);
    return this;
  }

   /**
   * Extensions contains raw X.509 extensions. When parsing certificates, this can be used to extract non-critical extensions that are not parsed by this package. When marshaling certificates, the Extensions field is ignored, see ExtraExtensions.
   * @return extensions
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Extensions contains raw X.509 extensions. When parsing certificates, this can be used to extract non-critical extensions that are not parsed by this package. When marshaling certificates, the Extensions field is ignored, see ExtraExtensions.")

  public List<Extension> getExtensions() {
    return extensions;
  }


  public void setExtensions(List<Extension> extensions) {
    this.extensions = extensions;
  }


  public Certificate extraExtensions(List<Extension> extraExtensions) {
    
    this.extraExtensions = extraExtensions;
    return this;
  }

  public Certificate addExtraExtensionsItem(Extension extraExtensionsItem) {
    if (this.extraExtensions == null) {
      this.extraExtensions = new ArrayList<Extension>();
    }
    this.extraExtensions.add(extraExtensionsItem);
    return this;
  }

   /**
   * ExtraExtensions contains extensions to be copied, raw, into any marshaled certificates. Values override any extensions that would otherwise be produced based on the other fields. The ExtraExtensions field is not populated when parsing certificates, see Extensions.
   * @return extraExtensions
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "ExtraExtensions contains extensions to be copied, raw, into any marshaled certificates. Values override any extensions that would otherwise be produced based on the other fields. The ExtraExtensions field is not populated when parsing certificates, see Extensions.")

  public List<Extension> getExtraExtensions() {
    return extraExtensions;
  }


  public void setExtraExtensions(List<Extension> extraExtensions) {
    this.extraExtensions = extraExtensions;
  }


  public Certificate ipAddresses(List<List<Integer>> ipAddresses) {
    
    this.ipAddresses = ipAddresses;
    return this;
  }

  public Certificate addIpAddressesItem(List<Integer> ipAddressesItem) {
    if (this.ipAddresses == null) {
      this.ipAddresses = new ArrayList<List>();
    }
    this.ipAddresses.add(ipAddressesItem);
    return this;
  }

   /**
   * IP addresses
   * @return ipAddresses
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "IP addresses")

  public List<List<Integer>> getIpAddresses() {
    return ipAddresses;
  }


  public void setIpAddresses(List<List<Integer>> ipAddresses) {
    this.ipAddresses = ipAddresses;
  }


  public Certificate isCA(Boolean isCA) {
    
    this.isCA = isCA;
    return this;
  }

   /**
   * is c a
   * @return isCA
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "is c a")

  public Boolean getIsCA() {
    return isCA;
  }


  public void setIsCA(Boolean isCA) {
    this.isCA = isCA;
  }


  public Certificate issuer(Name issuer) {
    
    this.issuer = issuer;
    return this;
  }

   /**
   * Get issuer
   * @return issuer
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Name getIssuer() {
    return issuer;
  }


  public void setIssuer(Name issuer) {
    this.issuer = issuer;
  }


  public Certificate issuingCertificateURL(List<String> issuingCertificateURL) {
    
    this.issuingCertificateURL = issuingCertificateURL;
    return this;
  }

  public Certificate addIssuingCertificateURLItem(String issuingCertificateURLItem) {
    if (this.issuingCertificateURL == null) {
      this.issuingCertificateURL = new ArrayList<String>();
    }
    this.issuingCertificateURL.add(issuingCertificateURLItem);
    return this;
  }

   /**
   * issuing certificate URL
   * @return issuingCertificateURL
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "issuing certificate URL")

  public List<String> getIssuingCertificateURL() {
    return issuingCertificateURL;
  }


  public void setIssuingCertificateURL(List<String> issuingCertificateURL) {
    this.issuingCertificateURL = issuingCertificateURL;
  }


  public Certificate keyUsage(Long keyUsage) {
    
    this.keyUsage = keyUsage;
    return this;
  }

   /**
   * KeyUsage KeyUsage KeyUsage KeyUsage represents the set of actions that are valid for a given key. It&#39;s a bitmap of the KeyUsage* constants.
   * @return keyUsage
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "KeyUsage KeyUsage KeyUsage KeyUsage represents the set of actions that are valid for a given key. It's a bitmap of the KeyUsage* constants.")

  public Long getKeyUsage() {
    return keyUsage;
  }


  public void setKeyUsage(Long keyUsage) {
    this.keyUsage = keyUsage;
  }


  public Certificate maxPathLen(Long maxPathLen) {
    
    this.maxPathLen = maxPathLen;
    return this;
  }

   /**
   * MaxPathLen and MaxPathLenZero indicate the presence and value of the BasicConstraints&#39; \&quot;pathLenConstraint\&quot;.  When parsing a certificate, a positive non-zero MaxPathLen means that the field was specified, -1 means it was unset, and MaxPathLenZero being true mean that the field was explicitly set to zero. The case of MaxPathLen&#x3D;&#x3D;0 with MaxPathLenZero&#x3D;&#x3D;false should be treated equivalent to -1 (unset).  When generating a certificate, an unset pathLenConstraint can be requested with either MaxPathLen &#x3D;&#x3D; -1 or using the zero value for both MaxPathLen and MaxPathLenZero.
   * @return maxPathLen
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "MaxPathLen and MaxPathLenZero indicate the presence and value of the BasicConstraints' \"pathLenConstraint\".  When parsing a certificate, a positive non-zero MaxPathLen means that the field was specified, -1 means it was unset, and MaxPathLenZero being true mean that the field was explicitly set to zero. The case of MaxPathLen==0 with MaxPathLenZero==false should be treated equivalent to -1 (unset).  When generating a certificate, an unset pathLenConstraint can be requested with either MaxPathLen == -1 or using the zero value for both MaxPathLen and MaxPathLenZero.")

  public Long getMaxPathLen() {
    return maxPathLen;
  }


  public void setMaxPathLen(Long maxPathLen) {
    this.maxPathLen = maxPathLen;
  }


  public Certificate maxPathLenZero(Boolean maxPathLenZero) {
    
    this.maxPathLenZero = maxPathLenZero;
    return this;
  }

   /**
   * MaxPathLenZero indicates that BasicConstraintsValid&#x3D;&#x3D;true and MaxPathLen&#x3D;&#x3D;0 should be interpreted as an actual maximum path length of zero. Otherwise, that combination is interpreted as MaxPathLen not being set.
   * @return maxPathLenZero
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "MaxPathLenZero indicates that BasicConstraintsValid==true and MaxPathLen==0 should be interpreted as an actual maximum path length of zero. Otherwise, that combination is interpreted as MaxPathLen not being set.")

  public Boolean getMaxPathLenZero() {
    return maxPathLenZero;
  }


  public void setMaxPathLenZero(Boolean maxPathLenZero) {
    this.maxPathLenZero = maxPathLenZero;
  }


  public Certificate notBefore(OffsetDateTime notBefore) {
    
    this.notBefore = notBefore;
    return this;
  }

   /**
   * not before Format: date-time Format: date-time Format: date-time
   * @return notBefore
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "not before Format: date-time Format: date-time Format: date-time")

  public OffsetDateTime getNotBefore() {
    return notBefore;
  }


  public void setNotBefore(OffsetDateTime notBefore) {
    this.notBefore = notBefore;
  }


  public Certificate ocSPServer(List<String> ocSPServer) {
    
    this.ocSPServer = ocSPServer;
    return this;
  }

  public Certificate addOcSPServerItem(String ocSPServerItem) {
    if (this.ocSPServer == null) {
      this.ocSPServer = new ArrayList<String>();
    }
    this.ocSPServer.add(ocSPServerItem);
    return this;
  }

   /**
   * RFC 5280, 4.2.2.1 (Authority Information Access)
   * @return ocSPServer
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "RFC 5280, 4.2.2.1 (Authority Information Access)")

  public List<String> getOcSPServer() {
    return ocSPServer;
  }


  public void setOcSPServer(List<String> ocSPServer) {
    this.ocSPServer = ocSPServer;
  }


  public Certificate permittedDNSDomains(List<String> permittedDNSDomains) {
    
    this.permittedDNSDomains = permittedDNSDomains;
    return this;
  }

  public Certificate addPermittedDNSDomainsItem(String permittedDNSDomainsItem) {
    if (this.permittedDNSDomains == null) {
      this.permittedDNSDomains = new ArrayList<String>();
    }
    this.permittedDNSDomains.add(permittedDNSDomainsItem);
    return this;
  }

   /**
   * permitted DNS domains
   * @return permittedDNSDomains
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "permitted DNS domains")

  public List<String> getPermittedDNSDomains() {
    return permittedDNSDomains;
  }


  public void setPermittedDNSDomains(List<String> permittedDNSDomains) {
    this.permittedDNSDomains = permittedDNSDomains;
  }


  public Certificate permittedDNSDomainsCritical(Boolean permittedDNSDomainsCritical) {
    
    this.permittedDNSDomainsCritical = permittedDNSDomainsCritical;
    return this;
  }

   /**
   * Name constraints
   * @return permittedDNSDomainsCritical
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Name constraints")

  public Boolean getPermittedDNSDomainsCritical() {
    return permittedDNSDomainsCritical;
  }


  public void setPermittedDNSDomainsCritical(Boolean permittedDNSDomainsCritical) {
    this.permittedDNSDomainsCritical = permittedDNSDomainsCritical;
  }


  public Certificate permittedEmailAddresses(List<String> permittedEmailAddresses) {
    
    this.permittedEmailAddresses = permittedEmailAddresses;
    return this;
  }

  public Certificate addPermittedEmailAddressesItem(String permittedEmailAddressesItem) {
    if (this.permittedEmailAddresses == null) {
      this.permittedEmailAddresses = new ArrayList<String>();
    }
    this.permittedEmailAddresses.add(permittedEmailAddressesItem);
    return this;
  }

   /**
   * permitted email addresses
   * @return permittedEmailAddresses
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "permitted email addresses")

  public List<String> getPermittedEmailAddresses() {
    return permittedEmailAddresses;
  }


  public void setPermittedEmailAddresses(List<String> permittedEmailAddresses) {
    this.permittedEmailAddresses = permittedEmailAddresses;
  }


  public Certificate permittedIPRanges(List<IPNet> permittedIPRanges) {
    
    this.permittedIPRanges = permittedIPRanges;
    return this;
  }

  public Certificate addPermittedIPRangesItem(IPNet permittedIPRangesItem) {
    if (this.permittedIPRanges == null) {
      this.permittedIPRanges = new ArrayList<IPNet>();
    }
    this.permittedIPRanges.add(permittedIPRangesItem);
    return this;
  }

   /**
   * permitted IP ranges
   * @return permittedIPRanges
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "permitted IP ranges")

  public List<IPNet> getPermittedIPRanges() {
    return permittedIPRanges;
  }


  public void setPermittedIPRanges(List<IPNet> permittedIPRanges) {
    this.permittedIPRanges = permittedIPRanges;
  }


  public Certificate permittedURIDomains(List<String> permittedURIDomains) {
    
    this.permittedURIDomains = permittedURIDomains;
    return this;
  }

  public Certificate addPermittedURIDomainsItem(String permittedURIDomainsItem) {
    if (this.permittedURIDomains == null) {
      this.permittedURIDomains = new ArrayList<String>();
    }
    this.permittedURIDomains.add(permittedURIDomainsItem);
    return this;
  }

   /**
   * permitted URI domains
   * @return permittedURIDomains
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "permitted URI domains")

  public List<String> getPermittedURIDomains() {
    return permittedURIDomains;
  }


  public void setPermittedURIDomains(List<String> permittedURIDomains) {
    this.permittedURIDomains = permittedURIDomains;
  }


  public Certificate policyIdentifiers(List<List<Long>> policyIdentifiers) {
    
    this.policyIdentifiers = policyIdentifiers;
    return this;
  }

  public Certificate addPolicyIdentifiersItem(List<Long> policyIdentifiersItem) {
    if (this.policyIdentifiers == null) {
      this.policyIdentifiers = new ArrayList<List>();
    }
    this.policyIdentifiers.add(policyIdentifiersItem);
    return this;
  }

   /**
   * policy identifiers
   * @return policyIdentifiers
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "policy identifiers")

  public List<List<Long>> getPolicyIdentifiers() {
    return policyIdentifiers;
  }


  public void setPolicyIdentifiers(List<List<Long>> policyIdentifiers) {
    this.policyIdentifiers = policyIdentifiers;
  }


  public Certificate publicKey(Object publicKey) {
    
    this.publicKey = publicKey;
    return this;
  }

   /**
   * public key
   * @return publicKey
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "public key")

  public Object getPublicKey() {
    return publicKey;
  }


  public void setPublicKey(Object publicKey) {
    this.publicKey = publicKey;
  }


  public Certificate publicKeyAlgorithm(Long publicKeyAlgorithm) {
    
    this.publicKeyAlgorithm = publicKeyAlgorithm;
    return this;
  }

   /**
   * PublicKeyAlgorithm PublicKeyAlgorithm PublicKeyAlgorithm public key algorithm
   * @return publicKeyAlgorithm
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "PublicKeyAlgorithm PublicKeyAlgorithm PublicKeyAlgorithm public key algorithm")

  public Long getPublicKeyAlgorithm() {
    return publicKeyAlgorithm;
  }


  public void setPublicKeyAlgorithm(Long publicKeyAlgorithm) {
    this.publicKeyAlgorithm = publicKeyAlgorithm;
  }


  public Certificate raw(List<Integer> raw) {
    
    this.raw = raw;
    return this;
  }

  public Certificate addRawItem(Integer rawItem) {
    if (this.raw == null) {
      this.raw = new ArrayList<Integer>();
    }
    this.raw.add(rawItem);
    return this;
  }

   /**
   * raw
   * @return raw
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "raw")

  public List<Integer> getRaw() {
    return raw;
  }


  public void setRaw(List<Integer> raw) {
    this.raw = raw;
  }


  public Certificate rawIssuer(List<Integer> rawIssuer) {
    
    this.rawIssuer = rawIssuer;
    return this;
  }

  public Certificate addRawIssuerItem(Integer rawIssuerItem) {
    if (this.rawIssuer == null) {
      this.rawIssuer = new ArrayList<Integer>();
    }
    this.rawIssuer.add(rawIssuerItem);
    return this;
  }

   /**
   * raw issuer
   * @return rawIssuer
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "raw issuer")

  public List<Integer> getRawIssuer() {
    return rawIssuer;
  }


  public void setRawIssuer(List<Integer> rawIssuer) {
    this.rawIssuer = rawIssuer;
  }


  public Certificate rawSubject(List<Integer> rawSubject) {
    
    this.rawSubject = rawSubject;
    return this;
  }

  public Certificate addRawSubjectItem(Integer rawSubjectItem) {
    if (this.rawSubject == null) {
      this.rawSubject = new ArrayList<Integer>();
    }
    this.rawSubject.add(rawSubjectItem);
    return this;
  }

   /**
   * raw subject
   * @return rawSubject
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "raw subject")

  public List<Integer> getRawSubject() {
    return rawSubject;
  }


  public void setRawSubject(List<Integer> rawSubject) {
    this.rawSubject = rawSubject;
  }


  public Certificate rawSubjectPublicKeyInfo(List<Integer> rawSubjectPublicKeyInfo) {
    
    this.rawSubjectPublicKeyInfo = rawSubjectPublicKeyInfo;
    return this;
  }

  public Certificate addRawSubjectPublicKeyInfoItem(Integer rawSubjectPublicKeyInfoItem) {
    if (this.rawSubjectPublicKeyInfo == null) {
      this.rawSubjectPublicKeyInfo = new ArrayList<Integer>();
    }
    this.rawSubjectPublicKeyInfo.add(rawSubjectPublicKeyInfoItem);
    return this;
  }

   /**
   * raw subject public key info
   * @return rawSubjectPublicKeyInfo
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "raw subject public key info")

  public List<Integer> getRawSubjectPublicKeyInfo() {
    return rawSubjectPublicKeyInfo;
  }


  public void setRawSubjectPublicKeyInfo(List<Integer> rawSubjectPublicKeyInfo) {
    this.rawSubjectPublicKeyInfo = rawSubjectPublicKeyInfo;
  }


  public Certificate rawTBSCertificate(List<Integer> rawTBSCertificate) {
    
    this.rawTBSCertificate = rawTBSCertificate;
    return this;
  }

  public Certificate addRawTBSCertificateItem(Integer rawTBSCertificateItem) {
    if (this.rawTBSCertificate == null) {
      this.rawTBSCertificate = new ArrayList<Integer>();
    }
    this.rawTBSCertificate.add(rawTBSCertificateItem);
    return this;
  }

   /**
   * raw t b s certificate
   * @return rawTBSCertificate
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "raw t b s certificate")

  public List<Integer> getRawTBSCertificate() {
    return rawTBSCertificate;
  }


  public void setRawTBSCertificate(List<Integer> rawTBSCertificate) {
    this.rawTBSCertificate = rawTBSCertificate;
  }


  public Certificate serialNumber(Object serialNumber) {
    
    this.serialNumber = serialNumber;
    return this;
  }

   /**
   * Operations always take pointer arguments (*Int) rather than Int values, and each unique Int value requires its own unique *Int pointer. To \&quot;copy\&quot; an Int value, an existing (or newly allocated) Int must be set to a new value using the Int.Set method; shallow copies of Ints are not supported and may lead to errors.
   * @return serialNumber
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Operations always take pointer arguments (*Int) rather than Int values, and each unique Int value requires its own unique *Int pointer. To \"copy\" an Int value, an existing (or newly allocated) Int must be set to a new value using the Int.Set method; shallow copies of Ints are not supported and may lead to errors.")

  public Object getSerialNumber() {
    return serialNumber;
  }


  public void setSerialNumber(Object serialNumber) {
    this.serialNumber = serialNumber;
  }


  public Certificate signature(List<Integer> signature) {
    
    this.signature = signature;
    return this;
  }

  public Certificate addSignatureItem(Integer signatureItem) {
    if (this.signature == null) {
      this.signature = new ArrayList<Integer>();
    }
    this.signature.add(signatureItem);
    return this;
  }

   /**
   * signature
   * @return signature
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "signature")

  public List<Integer> getSignature() {
    return signature;
  }


  public void setSignature(List<Integer> signature) {
    this.signature = signature;
  }


  public Certificate signatureAlgorithm(Long signatureAlgorithm) {
    
    this.signatureAlgorithm = signatureAlgorithm;
    return this;
  }

   /**
   * SignatureAlgorithm SignatureAlgorithm SignatureAlgorithm signature algorithm
   * @return signatureAlgorithm
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "SignatureAlgorithm SignatureAlgorithm SignatureAlgorithm signature algorithm")

  public Long getSignatureAlgorithm() {
    return signatureAlgorithm;
  }


  public void setSignatureAlgorithm(Long signatureAlgorithm) {
    this.signatureAlgorithm = signatureAlgorithm;
  }


  public Certificate subject(Name subject) {
    
    this.subject = subject;
    return this;
  }

   /**
   * Get subject
   * @return subject
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Name getSubject() {
    return subject;
  }


  public void setSubject(Name subject) {
    this.subject = subject;
  }


  public Certificate subjectKeyId(List<Integer> subjectKeyId) {
    
    this.subjectKeyId = subjectKeyId;
    return this;
  }

  public Certificate addSubjectKeyIdItem(Integer subjectKeyIdItem) {
    if (this.subjectKeyId == null) {
      this.subjectKeyId = new ArrayList<Integer>();
    }
    this.subjectKeyId.add(subjectKeyIdItem);
    return this;
  }

   /**
   * subject key Id
   * @return subjectKeyId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "subject key Id")

  public List<Integer> getSubjectKeyId() {
    return subjectKeyId;
  }


  public void setSubjectKeyId(List<Integer> subjectKeyId) {
    this.subjectKeyId = subjectKeyId;
  }


  public Certificate urIs(List<URL> urIs) {
    
    this.urIs = urIs;
    return this;
  }

  public Certificate addUrIsItem(URL urIsItem) {
    if (this.urIs == null) {
      this.urIs = new ArrayList<URL>();
    }
    this.urIs.add(urIsItem);
    return this;
  }

   /**
   * u r is
   * @return urIs
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "u r is")

  public List<URL> getUrIs() {
    return urIs;
  }


  public void setUrIs(List<URL> urIs) {
    this.urIs = urIs;
  }


  public Certificate unhandledCriticalExtensions(List<List<Long>> unhandledCriticalExtensions) {
    
    this.unhandledCriticalExtensions = unhandledCriticalExtensions;
    return this;
  }

  public Certificate addUnhandledCriticalExtensionsItem(List<Long> unhandledCriticalExtensionsItem) {
    if (this.unhandledCriticalExtensions == null) {
      this.unhandledCriticalExtensions = new ArrayList<List>();
    }
    this.unhandledCriticalExtensions.add(unhandledCriticalExtensionsItem);
    return this;
  }

   /**
   * UnhandledCriticalExtensions contains a list of extension IDs that were not (fully) processed when parsing. Verify will fail if this slice is non-empty, unless verification is delegated to an OS library which understands all the critical extensions.  Users can access these extensions using Extensions and can remove elements from this slice if they believe that they have been handled.
   * @return unhandledCriticalExtensions
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "UnhandledCriticalExtensions contains a list of extension IDs that were not (fully) processed when parsing. Verify will fail if this slice is non-empty, unless verification is delegated to an OS library which understands all the critical extensions.  Users can access these extensions using Extensions and can remove elements from this slice if they believe that they have been handled.")

  public List<List<Long>> getUnhandledCriticalExtensions() {
    return unhandledCriticalExtensions;
  }


  public void setUnhandledCriticalExtensions(List<List<Long>> unhandledCriticalExtensions) {
    this.unhandledCriticalExtensions = unhandledCriticalExtensions;
  }


  public Certificate unknownExtKeyUsage(List<List<Long>> unknownExtKeyUsage) {
    
    this.unknownExtKeyUsage = unknownExtKeyUsage;
    return this;
  }

  public Certificate addUnknownExtKeyUsageItem(List<Long> unknownExtKeyUsageItem) {
    if (this.unknownExtKeyUsage == null) {
      this.unknownExtKeyUsage = new ArrayList<List>();
    }
    this.unknownExtKeyUsage.add(unknownExtKeyUsageItem);
    return this;
  }

   /**
   * unknown ext key usage
   * @return unknownExtKeyUsage
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "unknown ext key usage")

  public List<List<Long>> getUnknownExtKeyUsage() {
    return unknownExtKeyUsage;
  }


  public void setUnknownExtKeyUsage(List<List<Long>> unknownExtKeyUsage) {
    this.unknownExtKeyUsage = unknownExtKeyUsage;
  }


  public Certificate version(Long version) {
    
    this.version = version;
    return this;
  }

   /**
   * version
   * @return version
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "version")

  public Long getVersion() {
    return version;
  }


  public void setVersion(Long version) {
    this.version = version;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Certificate certificate = (Certificate) o;
    return Objects.equals(this.authorityKeyId, certificate.authorityKeyId) &&
        Objects.equals(this.basicConstraintsValid, certificate.basicConstraintsValid) &&
        Objects.equals(this.crLDistributionPoints, certificate.crLDistributionPoints) &&
        Objects.equals(this.dnSNames, certificate.dnSNames) &&
        Objects.equals(this.emailAddresses, certificate.emailAddresses) &&
        Objects.equals(this.excludedDNSDomains, certificate.excludedDNSDomains) &&
        Objects.equals(this.excludedEmailAddresses, certificate.excludedEmailAddresses) &&
        Objects.equals(this.excludedIPRanges, certificate.excludedIPRanges) &&
        Objects.equals(this.excludedURIDomains, certificate.excludedURIDomains) &&
        Objects.equals(this.extKeyUsage, certificate.extKeyUsage) &&
        Objects.equals(this.extensions, certificate.extensions) &&
        Objects.equals(this.extraExtensions, certificate.extraExtensions) &&
        Objects.equals(this.ipAddresses, certificate.ipAddresses) &&
        Objects.equals(this.isCA, certificate.isCA) &&
        Objects.equals(this.issuer, certificate.issuer) &&
        Objects.equals(this.issuingCertificateURL, certificate.issuingCertificateURL) &&
        Objects.equals(this.keyUsage, certificate.keyUsage) &&
        Objects.equals(this.maxPathLen, certificate.maxPathLen) &&
        Objects.equals(this.maxPathLenZero, certificate.maxPathLenZero) &&
        Objects.equals(this.notBefore, certificate.notBefore) &&
        Objects.equals(this.ocSPServer, certificate.ocSPServer) &&
        Objects.equals(this.permittedDNSDomains, certificate.permittedDNSDomains) &&
        Objects.equals(this.permittedDNSDomainsCritical, certificate.permittedDNSDomainsCritical) &&
        Objects.equals(this.permittedEmailAddresses, certificate.permittedEmailAddresses) &&
        Objects.equals(this.permittedIPRanges, certificate.permittedIPRanges) &&
        Objects.equals(this.permittedURIDomains, certificate.permittedURIDomains) &&
        Objects.equals(this.policyIdentifiers, certificate.policyIdentifiers) &&
        Objects.equals(this.publicKey, certificate.publicKey) &&
        Objects.equals(this.publicKeyAlgorithm, certificate.publicKeyAlgorithm) &&
        Objects.equals(this.raw, certificate.raw) &&
        Objects.equals(this.rawIssuer, certificate.rawIssuer) &&
        Objects.equals(this.rawSubject, certificate.rawSubject) &&
        Objects.equals(this.rawSubjectPublicKeyInfo, certificate.rawSubjectPublicKeyInfo) &&
        Objects.equals(this.rawTBSCertificate, certificate.rawTBSCertificate) &&
        Objects.equals(this.serialNumber, certificate.serialNumber) &&
        Objects.equals(this.signature, certificate.signature) &&
        Objects.equals(this.signatureAlgorithm, certificate.signatureAlgorithm) &&
        Objects.equals(this.subject, certificate.subject) &&
        Objects.equals(this.subjectKeyId, certificate.subjectKeyId) &&
        Objects.equals(this.urIs, certificate.urIs) &&
        Objects.equals(this.unhandledCriticalExtensions, certificate.unhandledCriticalExtensions) &&
        Objects.equals(this.unknownExtKeyUsage, certificate.unknownExtKeyUsage) &&
        Objects.equals(this.version, certificate.version);
  }

  @Override
  public int hashCode() {
    return Objects.hash(authorityKeyId, basicConstraintsValid, crLDistributionPoints, dnSNames, emailAddresses, excludedDNSDomains, excludedEmailAddresses, excludedIPRanges, excludedURIDomains, extKeyUsage, extensions, extraExtensions, ipAddresses, isCA, issuer, issuingCertificateURL, keyUsage, maxPathLen, maxPathLenZero, notBefore, ocSPServer, permittedDNSDomains, permittedDNSDomainsCritical, permittedEmailAddresses, permittedIPRanges, permittedURIDomains, policyIdentifiers, publicKey, publicKeyAlgorithm, raw, rawIssuer, rawSubject, rawSubjectPublicKeyInfo, rawTBSCertificate, serialNumber, signature, signatureAlgorithm, subject, subjectKeyId, urIs, unhandledCriticalExtensions, unknownExtKeyUsage, version);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Certificate {\n");
    sb.append("    authorityKeyId: ").append(toIndentedString(authorityKeyId)).append("\n");
    sb.append("    basicConstraintsValid: ").append(toIndentedString(basicConstraintsValid)).append("\n");
    sb.append("    crLDistributionPoints: ").append(toIndentedString(crLDistributionPoints)).append("\n");
    sb.append("    dnSNames: ").append(toIndentedString(dnSNames)).append("\n");
    sb.append("    emailAddresses: ").append(toIndentedString(emailAddresses)).append("\n");
    sb.append("    excludedDNSDomains: ").append(toIndentedString(excludedDNSDomains)).append("\n");
    sb.append("    excludedEmailAddresses: ").append(toIndentedString(excludedEmailAddresses)).append("\n");
    sb.append("    excludedIPRanges: ").append(toIndentedString(excludedIPRanges)).append("\n");
    sb.append("    excludedURIDomains: ").append(toIndentedString(excludedURIDomains)).append("\n");
    sb.append("    extKeyUsage: ").append(toIndentedString(extKeyUsage)).append("\n");
    sb.append("    extensions: ").append(toIndentedString(extensions)).append("\n");
    sb.append("    extraExtensions: ").append(toIndentedString(extraExtensions)).append("\n");
    sb.append("    ipAddresses: ").append(toIndentedString(ipAddresses)).append("\n");
    sb.append("    isCA: ").append(toIndentedString(isCA)).append("\n");
    sb.append("    issuer: ").append(toIndentedString(issuer)).append("\n");
    sb.append("    issuingCertificateURL: ").append(toIndentedString(issuingCertificateURL)).append("\n");
    sb.append("    keyUsage: ").append(toIndentedString(keyUsage)).append("\n");
    sb.append("    maxPathLen: ").append(toIndentedString(maxPathLen)).append("\n");
    sb.append("    maxPathLenZero: ").append(toIndentedString(maxPathLenZero)).append("\n");
    sb.append("    notBefore: ").append(toIndentedString(notBefore)).append("\n");
    sb.append("    ocSPServer: ").append(toIndentedString(ocSPServer)).append("\n");
    sb.append("    permittedDNSDomains: ").append(toIndentedString(permittedDNSDomains)).append("\n");
    sb.append("    permittedDNSDomainsCritical: ").append(toIndentedString(permittedDNSDomainsCritical)).append("\n");
    sb.append("    permittedEmailAddresses: ").append(toIndentedString(permittedEmailAddresses)).append("\n");
    sb.append("    permittedIPRanges: ").append(toIndentedString(permittedIPRanges)).append("\n");
    sb.append("    permittedURIDomains: ").append(toIndentedString(permittedURIDomains)).append("\n");
    sb.append("    policyIdentifiers: ").append(toIndentedString(policyIdentifiers)).append("\n");
    sb.append("    publicKey: ").append(toIndentedString(publicKey)).append("\n");
    sb.append("    publicKeyAlgorithm: ").append(toIndentedString(publicKeyAlgorithm)).append("\n");
    sb.append("    raw: ").append(toIndentedString(raw)).append("\n");
    sb.append("    rawIssuer: ").append(toIndentedString(rawIssuer)).append("\n");
    sb.append("    rawSubject: ").append(toIndentedString(rawSubject)).append("\n");
    sb.append("    rawSubjectPublicKeyInfo: ").append(toIndentedString(rawSubjectPublicKeyInfo)).append("\n");
    sb.append("    rawTBSCertificate: ").append(toIndentedString(rawTBSCertificate)).append("\n");
    sb.append("    serialNumber: ").append(toIndentedString(serialNumber)).append("\n");
    sb.append("    signature: ").append(toIndentedString(signature)).append("\n");
    sb.append("    signatureAlgorithm: ").append(toIndentedString(signatureAlgorithm)).append("\n");
    sb.append("    subject: ").append(toIndentedString(subject)).append("\n");
    sb.append("    subjectKeyId: ").append(toIndentedString(subjectKeyId)).append("\n");
    sb.append("    urIs: ").append(toIndentedString(urIs)).append("\n");
    sb.append("    unhandledCriticalExtensions: ").append(toIndentedString(unhandledCriticalExtensions)).append("\n");
    sb.append("    unknownExtKeyUsage: ").append(toIndentedString(unknownExtKeyUsage)).append("\n");
    sb.append("    version: ").append(toIndentedString(version)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

